---
import Switch from '../widgets/LightSwitch.astro';
const { currentLanguage } = Astro.props;
---

<header class="dock-header">
    <div class="dock-container">
        <nav class="dock-nav">
            <div class="dock-backdrop"></div>
            <div class="dock-items">
                <a href="https://francordel.com" class="dock-item" id="link-home">
                    <span class="dock-icon">üè†</span>
                    <span class="dock-label" data-i18n="nav-home">Home</span>
                </a>
                <a href="#about-me" class="dock-item" id="link-about">
                    <span class="dock-icon">üë®‚Äçüíª</span>
                    <span class="dock-label" data-i18n="nav-about">About Me</span>
                </a>
                <a href="#experience" class="dock-item" id="link-experience">
                    <span class="dock-icon">üíº</span>
                    <span class="dock-label" data-i18n="nav-experience">Experience</span>
                </a>
                <a href="#projects" class="dock-item" id="link-projects">
                    <span class="dock-icon">üöÄ</span>
                    <span class="dock-label" data-i18n="nav-projects">Projects</span>
                </a>
                <a href="#education" class="dock-item" id="link-education">
                    <span class="dock-icon">üéì</span>
                    <span class="dock-label" data-i18n="nav-education">Education</span>
                </a>
                <a href="#research" class="dock-item" id="link-research">
                    <span class="dock-icon">üî¨</span>
                    <span class="dock-label" data-i18n="nav-research">Research</span>
                </a>
                <a href="#contact" class="dock-item" id="link-contact">
                    <span class="dock-icon">üìß</span>
                    <span class="dock-label" data-i18n="nav-contact">Contact</span>
                </a>
            </div>
        </nav>
    </div>
    
   
</header>

<script>
    // Function to highlight active section
    function highlightActiveSection() {
        const dockLinks = document.querySelectorAll('.dock-item');
        const allLinks = [...dockLinks];
        
        // Get current scroll position
        const scrollPosition = window.scrollY;
        
        // Get all sections
        const sections = Array.from(allLinks).map(link => {
            const href = link.getAttribute('href');
            if (!href || !href.startsWith('#')) return null;
            
            const sectionId = href.substring(1);
            return {
                id: sectionId,
                element: document.getElementById(sectionId),
                dockLink: dockLinks[Array.from(dockLinks).findIndex(l => l.getAttribute('href') === href)]
            };
        }).filter(section => section !== null && section.element !== null);
        
        // Find current visible section
        for (let i = sections.length - 1; i >= 0; i--) {
            const section = sections[i];
            if (section.element) {
                const rect = section.element.getBoundingClientRect();
                
                if (rect.top <= 150) {
                    // Remove active class from all links
                    allLinks.forEach(link => {
                        link.classList.remove('active-link');
                    });
                    
                    // Add active class to corresponding link
                    if (section.dockLink) section.dockLink.classList.add('active-link');
                    break;
                }
            }
        }
    }

    // Dock hover effects
    function initDockEffects() {
        const dockItems = document.querySelectorAll('.dock-item');
        const dockContainer = document.querySelector('.dock-items');
        
        if (!dockContainer) return;
        
        dockItems.forEach((item, index) => {
            item.addEventListener('mouseenter', () => {
                // Add expansion effect to adjacent items
                dockItems.forEach((otherItem, otherIndex) => {
                    const distance = Math.abs(index - otherIndex);
                    if (distance === 0) return;
                    
                    if (distance === 1) {
                        otherItem.style.transform = 'scale(1.05)';
                    } else if (distance === 2) {
                        otherItem.style.transform = 'scale(0.95)';
                    }
                });
            });
            
            item.addEventListener('mouseleave', () => {
                // Reset all items when leaving the dock area
                setTimeout(() => {
                    if (!dockContainer.matches(':hover')) {
                        dockItems.forEach(otherItem => {
                            otherItem.style.transform = '';
                        });
                    }
                }, 100);
            });
        });
    }

    // Update navigation when language changes
    document.addEventListener('languageChanged', (event) => {
        if (event instanceof CustomEvent && event.detail && event.detail.language) {
            highlightActiveSection();
        }
    });

    // Initialize everything when DOM is loaded
    document.addEventListener('DOMContentLoaded', () => {
        initDockEffects();
        
        // Detect scroll for highlighting active section
        window.addEventListener('scroll', highlightActiveSection);
        
        // Initialize highlighting
        highlightActiveSection();
    });
</script>

<style>
/* Dock Header Styles */
.dock-header {
    position: fixed;
    top: 2rem;
    left: 50%;
    transform: translateX(-50%);
    z-index: 1000;
    pointer-events: none;
}

.dock-container {
    pointer-events: auto;
}

.dock-nav {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
}

.dock-backdrop {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(20px);
    border-radius: 24px;
    border: 1px solid rgba(255, 255, 255, 0.2);
    box-shadow: 
        0 8px 32px rgba(0, 0, 0, 0.1),
        inset 0 1px 0 rgba(255, 255, 255, 0.2);
}

.dock-items {
    display: flex;
    align-items: center;
    gap: 16px;
    padding: 16px 32px;
    position: relative;
    z-index: 10;
}

.dock-item {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: 70px;
    height: 70px;
    border-radius: 16px;
    background: rgba(255, 255, 255, 0.08);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.15);
    text-decoration: none;
    color: var(--text-color);
    position: relative;
    transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
    cursor: pointer;
    overflow: hidden;
    min-width: 70px;
    min-height: 70px;
    z-index: 11;
}

.dock-item:hover {
    transform: scale(1.2) translateY(-8px);
    background: rgba(255, 255, 255, 0.15);
    border-color: rgba(255, 255, 255, 0.3);
    box-shadow: 
        0 16px 40px rgba(0, 0, 0, 0.15),
        0 8px 16px rgba(0, 0, 0, 0.1);
}

.dock-label {
    font-size: 10px;
    font-weight: 600;
    opacity: 0.8;
    text-align: center;
    line-height: 1;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    max-width: 58px;
    display: block;
}


@media (max-width: 900px) {
    .dock-items {
        gap: 3px;
        padding: 5px 8px;
    }

}

@media (max-width: 768px) {
    .dock-header {
        display: flex;
        top: 0.5rem;
        height: 90px;
    }
    .dock-items {
        gap: 8px;
        padding: 16px 32px;
        height: 90px;
    }
    .dock-item {
        width: 60px;
        height: 60px;
        min-width: 60px;
        min-height: 60px;
    }
    .dock-icon {
        font-size: 24px;
    }
    .dock-label {
        font-size: 10px;
        max-width: 40px;
    }
}

@media (max-width: 480px) {
    .dock-header {
        top: 0.2rem;
        height: 70px;
    }
    .dock-items {
        gap: 6px;
        padding: 10px 16px;
        height: 70px;
    }
    .dock-item {
        width: 44px;
        height: 44px;
        min-width: 44px;
        min-height: 44px;
    }
    .dock-icon {
        font-size: 18px;
    }
    .dock-label {
        font-size: 7px;
        max-width: 28px;
    }
}

/* Very wide screens optimization */


</style>
