---
const { project, language, index } = Astro.props;
import Flutter from '../svg/tech/Flutter.astro';
import Firebase from '../svg/tech/Firebase.astro';
import Java from '../svg/tech/Java.astro';


import Dart from '../svg/tech/Dart.astro';
import CSharp from '../svg/tech/CSharp.astro';

import WWW from '../svg/WWW.astro';
import unity from '../svg/tech/unity.astro';
import React from '../svg/tech/React.astro';
import Cloudflare from '../svg/tech/Cloudflare.astro';
import CSS from '../svg/tech/CSS.astro';
const technologyComponents = {
    'Dart': Dart,
    'CSharp': CSharp,
    'Flutter': Flutter,
    'Firebase': Firebase,
    'Java': Java,
    'unity': unity,
    'React': React,
    'Cloudflare': Cloudflare,
    'CSS': CSS,
};
---
<article class="project-card" style={`animation-delay: ${index * 0.2}s`}>
    <div class="project-image">
        <img src={project.image} alt={project.title[language]} loading="lazy" />
        <div class="project-overlay">
            <div class="project-actions">
                {project.video && (
                    <a href={project.video} class="action-btn video-btn" target="_blank" rel="noopener noreferrer" aria-label="Watch video">
                        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <polygon points="5,3 19,12 5,21" />
                        </svg>
                    </a>
                )}
                {project.github && (
                    <a href={project.github} class="action-btn github-btn" target="_blank" rel="noopener noreferrer" aria-label="View GitHub repository">
                        <svg viewBox="0 0 24 24" fill="currentColor">
                            <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                        </svg>
                    </a>
                )}
                {project.github2 && (
                    <a href={project.github2} class="action-btn github-btn secondary" target="_blank" rel="noopener noreferrer" aria-label="View secondary GitHub repository">
                        <svg viewBox="0 0 24 24" fill="currentColor">
                            <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                        </svg>
                    </a>
                )}
                {project.playStore && (
                    <a href={project.playStore} class="action-btn playstore-btn" target="_blank" rel="noopener noreferrer" aria-label="View on Google Play Store">
                        <svg viewBox="0 0 24 24" fill="currentColor">
                            <path d="M3,20.5V3.5C3,2.91 3.34,2.39 3.84,2.15L13.69,12L3.84,21.85C3.34,21.6 3,21.09 3,20.5M16.81,15.12L6.05,21.34L14.54,12.85L16.81,15.12M20.16,10.81C20.5,11.08 20.75,11.5 20.75,12C20.75,12.5 20.53,12.9 20.18,13.18L17.89,14.5L15.39,12L17.89,9.5L20.16,10.81M6.05,2.66L16.81,8.88L14.54,11.15L6.05,2.66Z"/>
                        </svg>
                    </a>
                )}
                {project.www && (
                    <a href={project.www} class="action-btn web-btn" target="_blank" rel="noopener noreferrer" aria-label="Visit website">
                        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <circle cx="12" cy="12" r="10"/>
                            <line x1="2" y1="12" x2="22" y2="12"/>
                            <path d="m2 12c0 5.52 2.24 10.52 6 13.5m8-13.5c0 5.52-2.24 10.52-6 13.5m6-13.5c0-5.52-2.24-10.52-6-13.5m-6 13.5c0-5.52 2.24-10.52 6-13.5"/>
                        </svg>
                    </a>
                )}
            </div>
        </div>
    </div>
    
    <div class="project-content">
        <div class="project-header">
            <h3 class="project-title" 
               data-spanish-title={project.title.spanish}
               data-english-title={project.title.english}>
                {project.title[language]}
            </h3>
            <div class="project-tech">
                {project.technologies.map((tech) => {
                    const TechComponent = technologyComponents[tech];
                    return (
                        <div class="tech-icon">
                            <TechComponent />
                        </div>
                    );
                })}
            </div>
        </div>
        
        <p class="project-description" 
           data-spanish-description={project.description.spanish}
           data-english-description={project.description.english}>
            {project.description[language]}
        </p>
        
        <div class="project-links">
            {project.video && (
                <a href={project.video} class="project-link video" target="_blank" rel="noopener noreferrer">
                    <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <polygon points="5,3 19,12 5,21" />
                    </svg>
                    <span>Video</span>
                </a>
            )}
            {project.github && (
                <a href={project.github} class="project-link github" target="_blank" rel="noopener noreferrer">
                    <svg viewBox="0 0 24 24" fill="currentColor">
                        <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                    </svg>
                    <span>GitHub</span>
                </a>
            )}
            {project.playStore && (
                <a href={project.playStore} class="project-link playstore" target="_blank" rel="noopener noreferrer">
                    <svg viewBox="0 0 24 24" fill="currentColor">
                        <path d="M3,20.5V3.5C3,2.91 3.34,2.39 3.84,2.15L13.69,12L3.84,21.85C3.34,21.6 3,21.09 3,20.5M16.81,15.12L6.05,21.34L14.54,12.85L16.81,15.12M20.16,10.81C20.5,11.08 20.75,11.5 20.75,12C20.75,12.5 20.53,12.9 20.18,13.18L17.89,14.5L15.39,12L17.89,9.5L20.16,10.81M6.05,2.66L16.81,8.88L14.54,11.15L6.05,2.66Z"/>
                    </svg>
                    <span>Play Store</span>
                </a>
            )}
            {project.www && (
                <a href={project.www} class="project-link web" target="_blank" rel="noopener noreferrer">
                    <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <circle cx="12" cy="12" r="10"/>
                        <line x1="2" y1="12" x2="22" y2="12"/>
                        <path d="m2 12c0 5.52 2.24 10.52 6 13.5m8-13.5c0 5.52-2.24 10.52-6 13.5m6-13.5c0-5.52-2.24-10.52-6-13.5m-6 13.5c0-5.52 2.24-10.52 6-13.5"/>
                    </svg>
                    <span>Website</span>
                </a>
            )}
        </div>
    </div>
</article>

<style>
    .project-card {
        background: var(--card-color);
        border-radius: 20px;
        overflow: hidden;
        box-shadow: 0 4px 25px rgba(0, 0, 0, 0.1);
        transition: all 0.4s cubic-bezier(0.165, 0.84, 0.44, 1);
        position: relative;
        opacity: 0;
        transform: translateY(30px);
        animation: fadeInUp 0.6s ease-out forwards;
        border: 1px solid rgba(0, 0, 0, 0.1);
    }

    .project-card:hover {
        transform: translateY(-8px);
        box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15);
    }

    /* Project Image Section */
    .project-image {
        position: relative;
        height: 280px;
        overflow: hidden;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    }

    .project-image img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.4s ease;
    }

    .project-card:hover .project-image img {
        transform: scale(1.05);
    }

    .project-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(135deg, rgba(0, 0, 0, 0.6) 0%, rgba(0, 0, 0, 0.3) 100%);
        display: flex;
        align-items: center;
        justify-content: center;
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .project-card:hover .project-overlay {
        opacity: 1;
    }

    .project-actions {
        display: flex;
        gap: 1rem;
        flex-wrap: wrap;
        justify-content: center;
    }

    .action-btn {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        background: rgba(255, 255, 255, 0.9);
        display: flex;
        align-items: center;
        justify-content: center;
        text-decoration: none;
        color: #333;
        transition: all 0.3s ease;
        backdrop-filter: blur(10px);
        transform: scale(0.8);
        opacity: 0;
        animation: actionBtnAppear 0.3s ease forwards;
    }

    .action-btn:nth-child(1) { animation-delay: 0.1s; }
    .action-btn:nth-child(2) { animation-delay: 0.2s; }
    .action-btn:nth-child(3) { animation-delay: 0.3s; }
    .action-btn:nth-child(4) { animation-delay: 0.4s; }

    .action-btn:hover {
        transform: scale(1.1);
        background: white;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    }

    .action-btn svg {
        width: 20px;
        height: 20px;
    }

    .video-btn:hover { color: #ff0000; }
    .github-btn:hover { color: #333; }
    .playstore-btn:hover { color: #01875f; }
    .web-btn:hover { color: #4285f4; }

    /* Project Content Section */
    .project-content {
        padding: 2rem;
        background: var(--card-color);
    }

    .project-header {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        margin-bottom: 1rem;
        gap: 1rem;
    }

    .project-title {
        font-size: 1.5rem;
        font-weight: 700;
        color: var(--blue-titles-color);
        margin: 0;
        line-height: 1.2;
        flex: 1;
    }

    .project-tech {
        display: flex;
        gap: 0.5rem;
        flex-wrap: wrap;
        align-items: center;
    }

    .tech-icon {
        width: 32px;
        height: 32px;
        padding: 0.4rem;
        background: rgba(var(--blue-titles-color), 0.1);
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.3s ease;
    }

    .tech-icon:hover {
        background: var(--blue-titles-color);
        transform: scale(1.1);
    }

    .tech-icon svg {
        width: 16px;
        height: 16px;
    }

    .project-description {
        color: var(--text-color-p);
        line-height: 1.6;
        margin-bottom: 1.5rem;
        font-size: 0.95rem;
    }

    .project-links {
        display: flex;
        gap: 1rem;
        flex-wrap: wrap;
        margin-top: auto;
    }

    .project-link {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.6rem 1rem;
        border-radius: 8px;
        text-decoration: none;
        font-size: 0.9rem;
        font-weight: 500;
        transition: all 0.3s ease;
        border: 1px solid rgba(0, 0, 0, 0.1);
        background: rgba(255, 255, 255, 0.05);
        color: var(--text-color);
    }

    .project-link:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    .project-link svg {
        width: 16px;
        height: 16px;
    }

    .project-link.video {
        background: linear-gradient(135deg, #ff0000, #cc0000);
        color: white;
        border: none;
    }

    .project-link.github {
        background: linear-gradient(135deg, #333, #2a2a2a);
        color: white;
        border: none;
    }

    .project-link.playstore {
        background: linear-gradient(135deg, #01875f, #4285f4);
        color: white;
        border: none;
    }

    .project-link.web {
        background: linear-gradient(135deg, #4285f4, #34a853);
        color: white;
        border: none;
    }

    /* Animations */
    @keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @keyframes actionBtnAppear {
        from {
            opacity: 0;
            transform: scale(0.8);
        }
        to {
            opacity: 1;
            transform: scale(1);
        }
    }

    /* Responsive Design */
    @media (max-width: 768px) {
        .project-image {
            height: 200px;
        }

        .project-content {
            padding: 1.5rem;
        }

        .project-header {
            flex-direction: column;
            gap: 1rem;
        }

        .project-title {
            font-size: 1.3rem;
        }

        .project-tech {
            justify-content: flex-start;
        }

        .tech-icon {
            width: 28px;
            height: 28px;
        }

        .tech-icon svg {
            width: 14px;
            height: 14px;
        }

        .project-description {
            font-size: 0.9rem;
        }

        .project-links {
            gap: 0.5rem;
        }

        .project-link {
            padding: 0.5rem 0.8rem;
            font-size: 0.85rem;
        }

        .project-link svg {
            width: 14px;
            height: 14px;
        }

        .action-btn {
            width: 40px;
            height: 40px;
        }

        .action-btn svg {
            width: 16px;
            height: 16px;
        }
    }

    @media (max-width: 480px) {
        .project-image {
            height: 180px;
        }

        .project-content {
            padding: 1rem;
        }

        .project-title {
            font-size: 1.2rem;
        }

        .project-description {
            font-size: 0.85rem;
        }

        .project-links {
            justify-content: center;
        }

        .project-link {
            padding: 0.4rem 0.6rem;
            font-size: 0.8rem;
        }

        .action-btn {
            width: 35px;
            height: 35px;
        }

        .action-btn svg {
            width: 14px;
            height: 14px;
        }
    }
</style>

<script>
    // Actualizar cuando cambia el idioma
    document.addEventListener('languageChanged', (event) => {
        if (event instanceof CustomEvent && event.detail && event.detail.language) {
            updateProjectCards(event.detail.language);
        }
    });

    // Inicializar con el idioma actual
    document.addEventListener('DOMContentLoaded', () => {
        const currentLanguage = localStorage.getItem('language') || 'spanish';
        updateProjectCards(currentLanguage);
    });

    // Función para actualizar las tarjetas de proyectos
    function updateProjectCards(language) {
        // Actualizar títulos de proyectos
        document.querySelectorAll('.project-title, .project-heading').forEach(element => {
            const spanishTitle = element.getAttribute('data-spanish-title');
            const englishTitle = element.getAttribute('data-english-title');
            
            if (language === 'spanish' && spanishTitle) {
                element.textContent = spanishTitle;
            } else if (language === 'english' && englishTitle) {
                element.textContent = englishTitle;
            }
        });
        
        // Actualizar descripciones de proyectos
        document.querySelectorAll('.project-description').forEach(element => {
            const spanishDesc = element.getAttribute('data-spanish-description');
            const englishDesc = element.getAttribute('data-english-description');
            
            if (language === 'spanish' && spanishDesc) {
                element.textContent = spanishDesc;
            } else if (language === 'english' && englishDesc) {
                element.textContent = englishDesc;
            }
        });
    }
</script>
